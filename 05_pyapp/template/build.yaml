parameters:
  - name: tag
    type: string
    default: 'latest'
jobs:
  - job: BuildAndPush
    displayName: Build job
    steps:
      - script: |
              echo $BRANCH_NAME
              sudo apt-get install rpm
              wget https://github.com/aquasecurity/trivy/releases/download/v$(trivyVersion)/trivy_$(trivyVersion)_Linux-64bit.deb
              sudo dpkg -i trivy_$(trivyVersion)_Linux-64bit.deb
              trivy -v
        displayName: 'Download and install Trivy'
        
      - task: Docker@2
        displayName: 'Build an image'
        inputs:
          command: build
          repository: $(ecr_repo)
          tags: ${{ parameters.tag }}
          dockerFile: '**/Dockerfile'
          
      - script: |
          mkdir report
          trivy image -s HIGH,CRITICAL --format template --template "@./trivy/contrib/junit.tpl" -o junit-report-high.xml $(ecr_repo):${{ parameters.tag }}
          trivy image -s LOW,MEDIUM --format template --template "@./trivy/contrib/junit.tpl" -o junit-report-low.xml $(ecr_repo):${{ parameters.tag }}
        displayName: "Image scan by Trivy"
        continueOnError: true

      - task: ECRPushImage@1
        inputs:
          awsCredentials: 'sanjay-personal'
          regionName: 'us-east-1'
          imageSource: 'imagename'
          sourceImageName: $(ecr_repo)
          sourceImageTag: '${{ parameters.tag }}'
          repositoryName: $(image_name)
          pushTag: '${{ parameters.tag }}'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/junit-report-high.xml'
          mergeTestResults: true
          failTaskOnFailedTests: false
          testRunTitle: 'Trivy - HIGH,CRITICAL Vulnerabilities'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/junit-report-low.xml'
          mergeTestResults: true
          failTaskOnFailedTests: false
          testRunTitle: 'Trivy - Low and Medium Vulnerabilities'